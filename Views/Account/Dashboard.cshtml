<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Purchase Order - Project Management</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {
            // Clear form function
            $('#clearButton').click(function () {
                $('input[type="text"], input[type="date"], input[type="number"]').val('');
                $('select').prop('selectedIndex', 0);
                $('input[type="checkbox"]').prop('checked', false);
            });

            // Form submit handler (Save)
            $('#saveButton').click(function (e) {
                e.preventDefault();

                const data = {
                    PO_ID: parseInt($('#po-id').val()) || 0,
                    PO_NO: parseInt($('#po-no').val()) || 0,
                    PO_DATE: $('#po-date').val(),
                    CUSTOMER: $('#customer').val() || "",
                    CIRCLE: $('#circle').val() || "",
                    PROJECT: $('#project').val() || "",
                    ACTIVITY: $('#activity').val() || "",
                    BULK_PO: $('#bulk-po').is(':checked')
                };

                console.log('Sending Data:', data);

                $.ajax({
                    url: 'http://localhost:5141/api/purchaseDetails/AddPurchaseDetails',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    success: function () {
                        alert('Purchase Order Saved Successfully!');
                    },
                    error: function (xhr) {
                        alert('Failed to save Purchase Order: ' + (xhr.responseText || 'Unknown Error'));
                    }
                });
            });






            // List function to fetch and display data


            $('#listButton').click(function () {
                $('#purchaseOrderTable').show();
                $.ajax({
                    url: 'http://localhost:5141/api/purchaseDetails/ListOfPurchaseDetails',
                    type: 'GET',
                    success: function (data) {
                        $('#purchaseOrderTableBody').empty();

                        if (!data || data.length === 0) {
                            $('#purchaseOrderTableBody').append('<tr><td colspan="7" class="text-center">No records found</td></tr>');
                        } else {
                            alert("List is Given Below ")
                            data.forEach(function (item) {
                                // console.log(item)
                                $('#purchaseOrderTableBody').append(`
                                    <tr>
                                                <td class="border p-2">${item.pO_ID}</td>
                                                <td class="border p-2">${item.pO_NO}</td>
                                                <td class="border p-2">${item.pO_DATE}</td>
                                        <td class="border p-2">${item.customer}</td>
                                        <td class="border p-2">${item.circle}</td>
                                        <td class="border p-2">${item.project}</td>
                                        <td class="border p-2">${item.activity}</td>
                                    </tr>
                                `);
                            });
                        }
                    },
                    error: function () {
                        alert('Failed to load purchase orders.');
                    }
                });
            });
        });
    </script>
</head>
<body class="bg-gray-50 font-sans">
    <div class="container mx-auto p-8">
        <div class="bg-white shadow-lg rounded-lg p-8">
            <h1 class="text-3xl font-bold text-gray-800 mb-6">Purchase Order</h1>

            <form>
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                    <div>
                        <label for="po-id" class="block text-gray-700 font-medium">PO ID</label>
                        <input type="number" id="po-id" class="w-full mt-2 p-3 border rounded-lg" placeholder="Enter PO ID" />
                    </div>

                    <div>
                        <label for="po-no" class="block text-gray-700 font-medium">PO Number</label>
                        <input type="number" id="po-no" class="w-full mt-2 p-3 border rounded-lg" placeholder="Enter PO Number" />
                    </div>

                    <div>
                        <label for="po-date" class="block text-gray-700 font-medium">PO Date</label>
                        <input type="date" id="po-date" class="w-full mt-2 p-3 border rounded-lg" />
                    </div>

                    <div>
                        <label for="customer" class="block text-gray-700 font-medium">Select Customer</label>
                        @Html.DropDownList("Master", ViewBag.MASTER as SelectList, "-- Select --", new { @id = "customer", @class = "w-full p-3 border rounded-lg" })
                    </div>

                    <div>
                        <label for="project" class="block text-gray-700 font-medium">Select Project</label>
                        @Html.DropDownList("Project", ViewBag.PROJECT as SelectList, "-- Select --", new { @id = "project", @class = "w-full p-3 border rounded-lg" })
                    </div>

                    <div>
                        <label for="activity" class="block text-gray-700 font-medium">Activity</label>
                        <input type="text" id="activity" class="w-full mt-2 p-3 border rounded-lg" placeholder="Describe the Activity" />
                    </div>

                    <div>
                        <label for="circle" class="block text-gray-700 font-medium">Select Circle</label>
                        @Html.DropDownList("Circle", ViewBag.CIRCLE as SelectList, "-- Select --", new { @id = "circle", @class = "w-full p-3 border rounded-lg" })
                    </div>
                </div>

                <div class="mt-8">
                    <input type="checkbox" id="bulk-po" class="mr-2" />
                    <label for="bulk-po" class="text-gray-700">Comfirm</label>
                </div>

                <div class="mt-8 flex space-x-4">
                    <button id="clearButton" type="button" class="bg-gray-600 text-white px-6 py-2 rounded-lg">Clear</button>
                    <button id="saveButton" type="button" class="bg-blue-600 text-white px-6 py-2 rounded-lg">Upload</button>

                    <!--LIST BUTTON   
                    <button id="listButton" type="button" class="bg-blue-400 text-white px-6 py-2 rounded-lg">List</button>
                  
                </div>
            </form>



            <!-- to show the parent table after clicking LIST button-->
            @*     <table class="w-full mt-8 border-collapse border border-gray-300">
                <thead>
                    <tr>
                        <th class="border p-2">PO ID</th>
                        <th class="border p-2">PO Number</th>
                        <th class="border p-2">PO Date</th>
                        <th class="border p-2">Customer</th>
                        <th class="border p-2">Circle</th>
                        <th class="border p-2">Project</th>
                        <th class="border p-2">Activity</th>
                    </tr>
                </thead>
                <tbody id="purchaseOrderTableBody"></tbody>
            </table> *@


            <!-- Table Section (Initially Hidden) -->
            <table class="w-full mt-8 border-collapse border border-gray-300" id="purchaseOrderTable" style="display: none;">
                <thead>
                    <tr>
                        <th class="border p-2">PO ID</th>
                        <th class="border p-2">PO Number</th>
                        <th class="border p-2">PO Date</th>
                        <th class="border p-2">Customer</th>
                        <th class="border p-2">Circle</th>
                        <th class="border p-2">Project</th>
                        <th class="border p-2">Activity</th>
                    </tr>
                </thead>
                <tbody id="purchaseOrderTableBody"></tbody>
            </table>


            <!--child Table -->

            <table class="w-full mt-8 border-collapse border border-gray-300" id="dataTable">
                <thead>
                    <tr>
                        <th class="border p-2">PO ID </th>
                        <th class="border p-2">Site ID</th>
                        <th class="border p-2">Site Name</th>
                        <th class="border p-2">Customer Code</th>
                        <th class="border p-2">Item Name</th>
                        <th class="border p-2">Quantity</th>
                        <th class="border p-2">Rate</th>
                        <th class="border p-2">Amount</th>
                        <th class="border p-2">Action</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td class="border p-2">

                            @Html.DropDownList("PoId", ViewBag.PoIds as List<SelectListItem>, "-- Select PO ID --", new { @class = "w-full border p-1 poId" })
                        </td>
                        <td class="border p-2">
                            @Html.DropDownList("SiteId", ViewBag.SiteIds as List<SelectListItem>, "-- Select Site ID --", new { @class = "w-full border p-1 siteId" })
                        </td>
                        <td class="border p-2">
                            @Html.DropDownList("SiteName", ViewBag.SiteNames as List<SelectListItem>, "-- Select Site Name --", new { @class = "w-full border p-1 siteName" })
                        </td>

                        <td class="border p-2">
                            @Html.DropDownList("CustomerCode", ViewBag.CustomerCodes as List<SelectListItem>, "-- Select Customer Code --", new { @class = "w-full border p-1 customerCode" })
                        </td>
                        @* <td class="border p-2">
                            @Html.DropDownList("SiteCode", ViewBag.SiteCodes as List<SelectListItem>, "-- Select Site Code --", new { @class = "w-full border p-1 siteCode" })
                        </td> *@
                        <td class="border p-2"><input type="text" id="itemNameInput" class="w-full border p-1 itemName" placeholder="Item Name" /></td>
                        <td class="border p-2"><input type="number" id="Unit" class="w-full border p-1   unit" placeholder="Unit" min="1" /></td>
                        <td class="border p-2"><input type="number" id="Rate" class="w-full border p-1   rate" placeholder="Rate" min="1 " /></td>
                        <td class="border p-2"><span id="Amount" class="amount">0</span></td>
                        <td class="border p-2"><button class="deleteRow bg-red-500 text-white px-2 py-1 rounded">Delete</button></td>
                    </tr>
                </tbody>
            </table>

            <!-- Buttons -->
            <!-- add row button working properly and just need to remove the tags-->

            <div class="flex justify-between mb-4">
                <button id="addRowButton" class="bg-blue-500 text-white px-4 py-2 rounded">Add Row</button>
            </div>



            <!-- Save Button -->
            <div class="flex justify-end mb-4">
                <button type="button" id="saveButton1" class="bg-blue-500 text-white px-4 py-2 rounded">Save Data</button>

            </div>

            <!--List Button -->
             <a href="@Url.Action("PurchasePO", "Account")">
                <button type="button" id="listButton1" class="bg-blue-500 text-white px-4 py-2 rounded">
                    List PurchasePO
                </button>
            </a > 







           <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
            <script>
                $(document).ready(function () {
                    let rowCount = 1; // Initialize row count

                    // Function to update IDs and names to ensure uniqueness
                    function updateElementIdentifiers(row, index) {
                        row.find('[id]').each(function () {
                            const originalId = $(this).attr('id');
                            const newId = originalId.replace(/\d+$/, '') + index;
                            $(this).attr('id', newId);
                        });
                        row.find('[name]').each(function () {
                            const originalName = $(this).attr('name');
                            const newName = originalName.replace(/\d+$/, '') + index;
                            $(this).attr('name', newName);
                        });
                    }

                    // Add Row
                    $('#addRowButton').click(function () {
                        const originalRow = $('tbody tr:first');
                        const newRow = originalRow.clone();

                        // Reset input values and amount
                        newRow.find('input').val('');
                        newRow.find('select').prop('selectedIndex', 0);
                        newRow.find('.amount').text('0');

                        // Update IDs and names to be unique
                        rowCount++;
                        updateElementIdentifiers(newRow, rowCount);

                        $('#dataTable tbody').append(newRow);
                    });

                    // //Calculate Amount on Change
                    // $(document).on('input', '.unit, .rate', function () {
                    //     const row = $(this).closest('tr');
                    //     const unit = parseFloat(row.find('.unit').val()) || 0;
                    //     const rate = parseFloat(row.find('.rate').val()) || 0;
                    //     const amount = unit * rate;
                    //     row.find('.amount').text(amount.toFixed(2));
                    // });

                    // Delete Row
                    $(document).on('click', '.deleteRow', function () {
                        if ($('#dataTable tbody tr').length > 1) {
                            $(this).closest('tr').remove();
                        } else {
                            alert('At least one row must be present.');
                        }
                    });

                    // Sync Site Name with Site ID
                    $(document).on('change', '.siteId', function () {
                        const siteId = $(this).val();
                        const row = $(this).closest('tr');
                        row.find('.siteName').val(siteId);
                    });


                    // Calculate Amount on Change
                //     $(document).on('input', '#Unit, #Rate', function () {
                //     const row = $(this).closest('tr');
                //     const unit = parseInt(row.find('#Unit').val()) || 0;
                //     const rate = parseInt(row.find('#Rate').val()) || 0;
                //     const amount = unit * rate;
                //     row.find('#Amount').text(amount);
                // });

                   //Calculate Amount on Change




                //    // Calculate Amount on Change  using ID
                //     $(document).on('change', '#Unit, #Rate', function () {
                //     const unit = BigInt($('#Unit').val() || 0);
                //     const rate = BigInt($('#Rate').val() || 0);
                //     const amount = unit * rate;

                //     // Display Amount
                //     $('#Amount').text(amount.toString());
                // });

                    $(document).on('change', '.unit, .rate', function () {
                    const row = $(this).closest('tr');
                    const unit = BigInt(row.find('.unit').val() || 0);
                    const rate = BigInt(row.find('.rate').val() || 0);
                    const amount = unit * rate;

                    // Display the calculated amount
                    row.find('.amount').text(amount.toString());
                });



                    // Save Data
                    $("#saveButton1").click(function () {
                        let data = [];
                        let hasError = false;

                        $('#dataTable tbody tr').each(function () {
                            const row = $(this);
                            const poId = row.find('.poId').val();
                            console.log(poId);

                            const siteId = row.find('.siteId').val();
                            console.log(siteId);

                            const siteName = row.find('.siteName').val();
                            console.log(siteName);
                            const customerCode = row.find('.customerCode').val();
                            console.log(customerCode);

                            const itemName = row.find('.itemName').val();
                            console.log(itemName);

                            const unit = parseInt(row.find('.unit').val()) || 0;
                            console.log(unit);
                            const rate = parseInt(row.find('.rate').val()) || 0;
                            console.log(rate)
                            const amount = unit * rate;
                            console.log(amount)


                            if (!poId || !siteId || !siteName || !customerCode || !itemName || unit <= 0 || rate <= 0) {
                                alert('Please fill all fields correctly in all rows.');
                                hasError = true;
                                return false;
                            }

                            data.push({
                                id: 0,
                                pO_ID: parseInt(poId),
                                sitE_ID: parseInt(siteId),
                                sitE_NM: siteName,
                                customeR_CODE: customerCode,
                                cusT_ITEM_NAME: itemName,
                                unit: unit,
                                rate: rate,
                                amount: amount
                            });
                           console.log(data)
                        });

                        if (hasError) {
                            return;
                        }
                         console.log(data)

                        $.ajax({
                            url: "http://localhost:5141/api/purchase-po/AddPurchasePo",
                            type: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify(data),
                            success: function (response) {
                                alert('Data saved successfully!');
                                console.log(response);

                                     $('#dataTable tbody').html(`
                    <tr>
                        <td class="border p-2">
                            @Html.DropDownList("PoId", ViewBag.PoIds as List<SelectListItem>, "-- Select PO ID --", new { @class = "w-full border p-1 poId" })
                        </td>
                        <td class="border p-2">
                            @Html.DropDownList("SiteId", ViewBag.SiteIds as List<SelectListItem>, "-- Select Site ID --", new { @class = "w-full border p-1 siteId" })
                        </td>
                        <td class="border p-2">
                             @Html.DropDownList("SiteName", ViewBag.SiteNames as List<SelectListItem>, "-- Select Site Name --", new { @class = "w-full border p-1 siteName" })
                        </td>
                        <td class="border p-2">
                            @Html.DropDownList("CustomerCode", ViewBag.CustomerCodes as List<SelectListItem>, "-- Select Customer Code --", new { @class = "w-full border p-1 customerCode" })
                        </td>
                        <td class="border p-2"><input type="text" class="w-full border p-1 itemName" placeholder="Item Name" /></td>
                        <td class="border p-2"><input type="number" class="w-full border p-1 unit" placeholder="Unit" min="1" /></td>
                        <td class="border p-2"><input type="number" class="w-full border p-1 rate" placeholder="Rate" min="1 " /></td>
                        <td class="border p-2"><span class="amount">0</span></td>
                        <td class="border p-2"><button class="deleteRow bg-red-500 text-white px-2 py-1 rounded">Delete</button></td>
                    </tr>
                `);
                            },
                            error: function (error) {
                                alert('Error saving data: Status ' + error.status + ', Response: ' + error.responseText);
                               // console.error(error);
                            }
                        });
                    });
                });
            </script>


        </div>
    </div>
</body>
</html> 